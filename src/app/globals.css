/* app/globals.css */

/* Ini adalah cara Tailwind CSS v4 mengimport dirinya */
@import "tailwindcss";

/* Konfigurasi HeroUI untuk Tailwind CSS v4 */
/* Pastikan jalur ke file hero.ts ini benar sesuai struktur projectmu */
@plugin './hero.ts';

/* Ini memberitahu HeroUI di mana komponen mereka berada untuk optimasi */
@source '../../node_modules/@heroui/theme/dist/**/*.{js,ts,jsx,tsx}';

/* Ini adalah custom variant dark mode yang direkomendasikan HeroUI */
@custom-variant dark (&:is(.dark *));

/* Kamu bisa menambahkan CSS kustom kamu di sini di luar direktif Tailwind */
/* Contoh untuk font yang kamu pakai di layout.tsx */
body {
  /* Pastikan variabel font di-define di tailwind.config.ts atau langsung di sini jika tidak pakai variabel theme */
  /* Contoh: font-family: var(--font-geist-sans); */
  /* Next.js Geist fonts sudah otomatis diaplikasikan di layout.tsx */
}

/* Aturan CSS tambahan jika diperlukan */
/* Misalnya, untuk variabel CSS yang universal */
:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Jika kamu ingin menggunakan variabel --background dan --foreground ini
   di seluruh aplikasi, kamu perlu mengaturnya di global CSS atau melalui Tailwind's theme config.
   Jika tujuannya hanya untuk mengubah warna body, kamu bisa langsung pakai Tailwind classes
   atau mengatur CSS variabel seperti ini. */
body {
  background: var(--background);
  color: var(--foreground);
  /* Untuk font, sudah diatur di layout.tsx dengan kelas geistSans.variable */
}
